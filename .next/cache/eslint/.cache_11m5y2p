[{"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/_app.tsx":"1","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/_document.tsx":"2","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/add/addInfo.tsx":"3","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/add/index.tsx":"4","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/api/auth/login.ts":"5","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/api/auth/logout.ts":"6","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/api/hello.ts":"7","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/api/me.ts":"8","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/chart/index.tsx":"9","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/hosting/index.tsx":"10","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/index.tsx":"11","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/login.tsx":"12","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/notification/index.tsx":"13","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/register.tsx":"14","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/search.tsx":"15","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/setting/account.tsx":"16","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/ErrorBoundary.tsx":"17","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/add/AddTemplate.tsx":"18","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/auth/QuestionLink.tsx":"19","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/auth/SignInForm.tsx":"20","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/auth/SignUpForm.tsx":"21","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/base/Footer.tsx":"22","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/base/FooterTabItem.tsx":"23","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/base/GlobalDialog.tsx":"24","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/base/GlobalFooter.tsx":"25","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/base/Header.tsx":"26","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/base/HeaderBackButton.tsx":"27","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/base/MobileHeader.tsx":"28","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/base/SearchArea.tsx":"29","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/base/TopHeader.tsx":"30","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/base/UserMenu.tsx":"31","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/charts/MainChart.js":"32","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/AutoHeightPage.tsx":"33","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/Button.tsx":"34","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/Dialog.tsx":"35","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/ErrorMessage.tsx":"36","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/Field.tsx":"37","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/FullHeightPage.tsx":"38","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/Input.tsx":"39","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/LabelDatePicker.tsx":"40","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/LabelInput.tsx":"41","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/LabelSelect.tsx":"42","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/LableTextArea.tsx":"43","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/Modal.tsx":"44","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/Overlay.tsx":"45","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/ThumbnailUploadField.tsx":"46","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/Wrapper.tsx":"47","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/home/AuctionCard.tsx":"48","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/home/AuctionCardList.tsx":"49","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/setting/AccountSetting.tsx":"50","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/templates/BasicTemplate.tsx":"51","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/templates/TabTemplate.tsx":"52","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/vectors/ArrowLeft.tsx":"53","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/api/auctions.ts":"54","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/api/auth.ts":"55","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/api/notification.ts":"56","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/api/price-index.ts":"57","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/api/types.ts":"58","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/api/user.ts":"59","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/applyAuth.ts":"60","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/buttonTheme.ts":"61","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/colors.ts":"62","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/constants.ts":"63","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/cookie.js":"64","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/defaultAxios.ts":"65","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/local-storage.ts":"66","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/media.ts":"67","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/protectedRotue.ts":"68","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/utils/pattern.js":"69"},{"size":1188,"mtime":1668497627521,"results":"70","hashOfConfig":"71"},{"size":817,"mtime":1665062193167,"results":"72","hashOfConfig":"71"},{"size":6461,"mtime":1668517299967,"results":"73","hashOfConfig":"71"},{"size":4260,"mtime":1668517299968,"results":"74","hashOfConfig":"71"},{"size":922,"mtime":1667733176750,"results":"75","hashOfConfig":"71"},{"size":594,"mtime":1667733176751,"results":"76","hashOfConfig":"71"},{"size":305,"mtime":1667733176754,"results":"77","hashOfConfig":"71"},{"size":268,"mtime":1667733176755,"results":"78","hashOfConfig":"71"},{"size":1458,"mtime":1667733176755,"results":"79","hashOfConfig":"71"},{"size":3361,"mtime":1668497627522,"results":"80","hashOfConfig":"71"},{"size":2623,"mtime":1668517299969,"results":"81","hashOfConfig":"71"},{"size":545,"mtime":1668497627524,"results":"82","hashOfConfig":"71"},{"size":2673,"mtime":1668517299970,"results":"83","hashOfConfig":"71"},{"size":269,"mtime":1667733176757,"results":"84","hashOfConfig":"71"},{"size":153,"mtime":1665062193168,"results":"85","hashOfConfig":"71"},{"size":296,"mtime":1668497627525,"results":"86","hashOfConfig":"71"},{"size":1056,"mtime":1667733176727,"results":"87","hashOfConfig":"71"},{"size":1389,"mtime":1668497627495,"results":"88","hashOfConfig":"71"},{"size":539,"mtime":1665062193162,"results":"89","hashOfConfig":"71"},{"size":3277,"mtime":1668501199366,"results":"90","hashOfConfig":"71"},{"size":8902,"mtime":1668497627497,"results":"91","hashOfConfig":"71"},{"size":580,"mtime":1667733176730,"results":"92","hashOfConfig":"71"},{"size":1115,"mtime":1665062193162,"results":"93","hashOfConfig":"71"},{"size":743,"mtime":1668497627497,"results":"94","hashOfConfig":"71"},{"size":2921,"mtime":1668497627498,"results":"95","hashOfConfig":"71"},{"size":3084,"mtime":1668501199368,"results":"96","hashOfConfig":"71"},{"size":630,"mtime":1665062193163,"results":"97","hashOfConfig":"71"},{"size":1182,"mtime":1667733176731,"results":"98","hashOfConfig":"71"},{"size":772,"mtime":1667733176731,"results":"99","hashOfConfig":"71"},{"size":2684,"mtime":1668501199369,"results":"100","hashOfConfig":"71"},{"size":2538,"mtime":1668497627501,"results":"101","hashOfConfig":"71"},{"size":1361,"mtime":1667733176731,"results":"102","hashOfConfig":"71"},{"size":547,"mtime":1668497627502,"results":"103","hashOfConfig":"71"},{"size":1300,"mtime":1667733176733,"results":"104","hashOfConfig":"71"},{"size":1503,"mtime":1668497627502,"results":"105","hashOfConfig":"71"},{"size":347,"mtime":1667733176733,"results":"106","hashOfConfig":"71"},{"size":2252,"mtime":1668497627503,"results":"107","hashOfConfig":"71"},{"size":455,"mtime":1665062193163,"results":"108","hashOfConfig":"71"},{"size":947,"mtime":1667733176734,"results":"109","hashOfConfig":"71"},{"size":2139,"mtime":1667733176734,"results":"110","hashOfConfig":"71"},{"size":1309,"mtime":1667733176734,"results":"111","hashOfConfig":"71"},{"size":2282,"mtime":1668497627504,"results":"112","hashOfConfig":"71"},{"size":1640,"mtime":1667733176735,"results":"113","hashOfConfig":"71"},{"size":1069,"mtime":1668497627505,"results":"114","hashOfConfig":"71"},{"size":677,"mtime":1668497627505,"results":"115","hashOfConfig":"71"},{"size":3770,"mtime":1668517299961,"results":"116","hashOfConfig":"71"},{"size":842,"mtime":1667733176736,"results":"117","hashOfConfig":"71"},{"size":6096,"mtime":1668517299962,"results":"118","hashOfConfig":"71"},{"size":983,"mtime":1668497627506,"results":"119","hashOfConfig":"71"},{"size":4068,"mtime":1668497627507,"results":"120","hashOfConfig":"71"},{"size":972,"mtime":1668497627507,"results":"121","hashOfConfig":"71"},{"size":984,"mtime":1668497627508,"results":"122","hashOfConfig":"71"},{"size":474,"mtime":1665062193165,"results":"123","hashOfConfig":"71"},{"size":1483,"mtime":1668497627514,"results":"124","hashOfConfig":"71"},{"size":2211,"mtime":1668497627514,"results":"125","hashOfConfig":"71"},{"size":271,"mtime":1668517299965,"results":"126","hashOfConfig":"71"},{"size":444,"mtime":1667733176741,"results":"127","hashOfConfig":"71"},{"size":2561,"mtime":1668497627514,"results":"128","hashOfConfig":"71"},{"size":518,"mtime":1668497627515,"results":"129","hashOfConfig":"71"},{"size":227,"mtime":1668497627516,"results":"130","hashOfConfig":"71"},{"size":1542,"mtime":1668497627517,"results":"131","hashOfConfig":"71"},{"size":416,"mtime":1668497627517,"results":"132","hashOfConfig":"71"},{"size":1150,"mtime":1668497627517,"results":"133","hashOfConfig":"71"},{"size":381,"mtime":1667733176744,"results":"134","hashOfConfig":"71"},{"size":845,"mtime":1668497627518,"results":"135","hashOfConfig":"71"},{"size":172,"mtime":1668497627518,"results":"136","hashOfConfig":"71"},{"size":491,"mtime":1667733176745,"results":"137","hashOfConfig":"71"},{"size":869,"mtime":1668497627518,"results":"138","hashOfConfig":"71"},{"size":614,"mtime":1667733176745,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},"1n0w2d7",{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274"},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299"},{"filePath":"300","messages":"301","suppressedMessages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","suppressedMessages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","suppressedMessages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","suppressedMessages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346"},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353"},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","suppressedMessages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/_app.tsx",["360"],[],"import '@/styles/globals.css';\nimport type { AppProps } from 'next/app';\nimport { ThemeProvider } from 'styled-components';\nimport { colors } from '@/lib/colors';\nimport ErrorBoundary from '@/components/ErrorBoundary';\nimport 'antd/dist/antd.css';\nimport { Hydrate, QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { useEffect, useState } from 'react';\nimport GlobalStyle from '@/styles/GlobalStyle';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\n\nimport GlobalDialog from '@/components/base/GlobalDialog';\n\n// if (process.env.NODE_ENV === 'development') {\n//   require('mocks');\n// }\n\nfunction MyApp({ Component, pageProps }: AppProps) {\n  const [queryClient] = useState(() => new QueryClient());\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ReactQueryDevtools initialIsOpen={false} />\n      <ThemeProvider theme={colors}>\n        <GlobalStyle />\n        <ErrorBoundary>\n          <Hydrate state={pageProps.dehydratedState}>\n            <Component {...pageProps} />\n            <GlobalDialog />\n          </Hydrate>\n        </ErrorBoundary>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default MyApp;\n","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/_document.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/add/addInfo.tsx",["361","362","363"],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/add/index.tsx",["364","365"],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/api/auth/login.ts",[],["366"],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/api/auth/logout.ts",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/api/hello.ts",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/api/me.ts",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/chart/index.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/hosting/index.tsx",["367","368","369"],[],"import type { NextPage } from 'next';\nimport styled from 'styled-components';\nimport { useFetchInfiniteMyAuctions } from '@/hooks/auctions';\nimport TabTamplete from '@/components/templates/TabTemplate';\nimport AuctionCardList from '@/components/home/AuctionCardList';\nimport { media } from '@/lib/media';\nimport Button from '@/components/common/Button';\nimport { AuctionType } from '@/lib/api/types';\nimport { useEffect, useState } from 'react';\nimport { colors } from '@/lib/colors';\nimport { useAtom } from 'jotai';\nimport { userAtom } from '@/store';\nimport { checkIsLoggedIn } from '@/lib/protectedRotue';\nimport { useRouter } from 'next/router';\nimport { useOpenDialog } from '@/hooks/useDialog';\n\nconst Home: NextPage = () => {\n  const [selectedAuctionType, setSelectedAuctionType] = useState<AuctionType>('hosting');\n  const [user, setUser] = useAtom(userAtom);\n\n  useEffect(() => {\n    if (!user) {\n      getUser();\n    }\n  }, []);\n\n  const getUser = async () => {\n    const userResult = await checkIsLoggedIn({ redirectTo: '/' });\n    if (userResult) {\n      setUser(userResult);\n      return;\n    }\n  };\n\n  const {\n    data: auctions,\n    isLoading,\n    hasNextPage,\n    fetchNextPage,\n  } = useFetchInfiniteMyAuctions(selectedAuctionType, {\n    getNextPageParam: (lastPage) => {\n      if (!lastPage.last) {\n        return lastPage.pageable.pageNumber + 1;\n      }\n    },\n    enabled: !!user,\n  });\n\n  // const me = async () => {\n  //   const result = await getProfile();\n  //   if (result) {\n  //     setUser(result);\n  //   } else {\n  //     router.replace('/login');\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   me();\n  // }, []);\n\n  const selectMenu = (selectedMenu) => {\n    setSelectedAuctionType(selectedMenu);\n  };\n\n  if (isLoading || !user) return;\n\n  return (\n    <StyledTabTamplete>\n      <Content>\n        <SubMenuLayout>\n          <StyledMenu\n            selected={selectedAuctionType === 'hosting'}\n            onClick={() => selectMenu('hosting')}\n          >\n            나의(경매/역경매)\n          </StyledMenu>\n          <StyledMenu\n            selected={selectedAuctionType === 'bidding'}\n            onClick={() => selectMenu('bidding')}\n          >\n            참가(경매/역경매)\n          </StyledMenu>\n        </SubMenuLayout>\n        <AuctionCardList auctions={auctions} forbidden></AuctionCardList>\n        {hasNextPage && (\n          <ButtonWrapper>\n            <Button size=\"medium\" onClick={fetchNextPage}>\n              더보기\n            </Button>\n          </ButtonWrapper>\n        )}\n      </Content>\n    </StyledTabTamplete>\n  );\n};\n\n// export async function getServerSideProps() {\n//   const auctions = await getAuctions();\n//   console.log(auctions);\n\n//   return { props: { auctions } };\n//}\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledTabTamplete = styled(TabTamplete)`\n  padding: 16px 16px;\n`;\n\nconst Content = styled.div`\n  ${media.wide} {\n    width: 1200px;\n    min-height: 100px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nconst SubMenuLayout = styled.div`\n  display: flex;\n  gap: 16px;\n  padding: 10px 0;\n  font-size: 16px;\n`;\n\nconst StyledMenu = styled.h3<{ selected: boolean }>`\n  color: ${({ selected }) => (selected ? `${colors.primary}` : `${colors.gray5}`)};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport default Home;\n","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/index.tsx",["370"],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/login.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/notification/index.tsx",["371"],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/register.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/search.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/pages/setting/account.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/ErrorBoundary.tsx",["372"],[],"import React, { Component, ErrorInfo, ReactNode } from 'react';\n\ninterface Props {\n  children?: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false,\n  };\n  static getDerivedStateFromError(_: Error) {\n    // Update state so the next render will show the fallback UI\n\n    return { hasError: true };\n  }\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    // You can use your own error logging service here\n    console.log({ error, errorInfo });\n  }\n  render() {\n    // Check if the error is thrown\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <div>\n          <h2>화면 에러!</h2>\n          <button type=\"button\" onClick={() => this.setState({ hasError: false })}>\n            다시 시도 하시겠습니까?\n          </button>\n        </div>\n      );\n    }\n\n    // Return children components in case of no error\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/add/AddTemplate.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/auth/QuestionLink.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/auth/SignInForm.tsx",["373"],[],"import styled from 'styled-components';\nimport LabelInput from '@/components/common/LabelInput';\nimport Button from '@/components/common/Button';\nimport QuestionLink from '@/components/auth/QuestionLink';\nimport { AUTH_DESCRIPTIONS } from '@/lib/constants';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { login } from '@/lib/api/auth';\nimport { setDefaultAxiosAuth } from '@/lib/defaultAxios';\nimport { useRouter } from 'next/router';\nimport { media } from '@/lib/media';\nimport { useOpenDialog } from '@/hooks/useDialog';\n\ninterface Props {\n  mode: 'login' | 'register';\n}\n\ntype Inputs = {\n  email: string;\n  password: string;\n};\n\nfunction SignInForm({ mode }: Props) {\n  const {\n    register: registerHookForm,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<Inputs>();\n\n  const { openDialog } = useOpenDialog();\n\n  const { userIdPlaceholder, passwordPlaceholder, buttonText, question, actionLink, actionText } =\n    AUTH_DESCRIPTIONS[mode];\n\n  const router = useRouter();\n\n  const onSubmit: SubmitHandler<Inputs> = async (data) => {\n    try {\n      const { status, result } = await login(data);\n      if (status == 200) {\n        await localStorage.setItem('accessToken', result.token);\n        await setDefaultAxiosAuth(result.token);\n        router.replace('/');\n      }\n    } catch (e: any) {\n      openDialog({\n        title: '로그인 실패',\n        description: e.response.data.message,\n      });\n    }\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit(onSubmit)}>\n      <Wrapper>\n        <LabelInput\n          label=\"이메일\"\n          placeholder={userIdPlaceholder}\n          errorMessage={errors.email?.type === 'required' && '이메일을 입력해주세요'}\n          {...registerHookForm('email', { required: true })}\n        />\n        <LabelInput\n          {...registerHookForm('password', { required: true })}\n          label=\"비밀번호\"\n          type=\"password\"\n          errorMessage={errors.password?.type === 'required' && '비밀번호를 입력해주세요'}\n          placeholder={passwordPlaceholder}\n        />\n      </Wrapper>\n\n      <ActionsBox>\n        <Button type=\"submit\" styleType=\"primary\" layoutMode=\"fullWidth\">\n          {buttonText}\n        </Button>\n        <QuestionLinkWrapper>\n          <QuestionLink question={question} name={actionText} href={actionLink} />\n          <QuestionLink\n            question={'비밀번호가 기억나지 않으세요?'}\n            name={'비빌번호 찾기'}\n            href={'/setting/account'}\n          />\n        </QuestionLinkWrapper>\n      </ActionsBox>\n    </StyledForm>\n  );\n}\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  justify-content: space-between;\n  ${media.mobile} {\n    justify-content: center;\n    width: 460px;\n    align-self: center;\n  }\n`;\n\nconst Wrapper = styled.div`\n  padding: 16px;\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n`;\n\nconst QuestionLinkWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst ActionsBox = styled.div`\n  padding: 16px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 24px;\n  ${media.mobile} {\n    margin-top: 24px;\n  }\n`;\n\nexport default SignInForm;\n","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/auth/SignUpForm.tsx",["374","375","376","377","378","379"],[],"import styled from 'styled-components';\nimport LabelInput from '@/components/common/LabelInput';\nimport Button from '@/components/common/Button';\nimport QuestionLink from '@/components/auth/QuestionLink';\nimport { AUTH_DESCRIPTIONS } from '@/lib/constants';\nimport { useForm, SubmitHandler, Controller, FieldValues } from 'react-hook-form';\nimport { defaultAxios } from '@/lib/defaultAxios';\nimport { useRouter } from 'next/router';\nimport LabelSelect from '../common/LabelSelect';\nimport { email, password } from '@/lib/utils/pattern';\nimport { media } from '@/lib/media';\nimport { useModifyUser, useRegister } from '@/hooks/auth';\nimport Swal from 'sweetalert2';\nimport { colors } from '@/lib/colors';\nimport { useAtom } from 'jotai';\nimport { useEffect } from 'react';\nimport { checkIsLoggedIn } from '@/lib/protectedRotue';\nimport { userAtom } from '@/store';\n\ninterface Props {\n  mode: 'modify' | 'register';\n}\n\ntype User = {\n  userId: string;\n  password: string;\n  businessType: string;\n  businessName: string;\n};\n\nfunction SignUpForm({ mode }: Props) {\n  const router = useRouter();\n  const [user, setUser] = useAtom(userAtom);\n\n  const getUser = async () => {\n    const user = await checkIsLoggedIn();\n    setUser(user);\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  const isModifyMode = !!user;\n\n  const {\n    register: registerHookForm,\n    handleSubmit,\n    getValues,\n    control,\n    formState: { errors },\n  } = useForm();\n\n  const { passwordPlaceholder, buttonText, question, actionLink, actionText } =\n    AUTH_DESCRIPTIONS[isModifyMode ? 'modify' : 'register'];\n\n  const { mutate: mutateRegister } = useRegister({\n    onSuccess: () => {\n      Swal.fire('회원가입 성공!', '회원 가입을 환영합니다!', 'success');\n      router.replace('/');\n    },\n    onError: (e: any) => {\n      Swal.fire('가입 실패!', e.response.data.message, 'error');\n    },\n  });\n\n  const { mutate: mutateModifyUser } = useModifyUser({\n    onSuccess: () => {\n      Swal.fire('수정 성공!', '회원정보가 수정되었습니다.', 'success');\n      router.replace('/');\n    },\n    onError: (e: any) => {\n      Swal.fire('수정 실패!', e.response.data.message, 'error');\n    },\n  });\n\n  const onSubmit: SubmitHandler<FieldValues> = async (data) => {\n    const {\n      businessType,\n      businessName,\n      representative,\n      registrationNumber,\n      licenceImageUrl,\n      name,\n      email,\n      password,\n      bank,\n      accountNumber,\n      accountHolder,\n    } = data;\n\n    const business = {\n      businessType,\n      businessName,\n      representative,\n      registrationNumber,\n      licenceImageUrl,\n    };\n    const personal = {\n      name,\n      email,\n      password,\n    };\n    const account = {\n      bank,\n      accountNumber,\n      accountHolder,\n    };\n\n    if (!isModifyMode) {\n      mutateRegister({ business, personal, account, isEnabled: 'Y' });\n    } else {\n      const personalUpdateCommand = {\n        name,\n      };\n      const params = {\n        data: {\n          business,\n          personalUpdateCommand,\n          accountUpdateCommand: account,\n          isEnabled: 'Y',\n          inDeleted: 'Y',\n        },\n        id: user.id,\n      };\n      mutateModifyUser(params);\n    }\n  };\n\n  const checkPassword = (repasswordValue: string) => {\n    return getValues('password') === repasswordValue;\n  };\n\n  const handleUser = () => {\n    defaultAxios.get('/api/me');\n  };\n  console.log(user);\n\n  return (\n    <StyledForm onSubmit={handleSubmit(onSubmit)}>\n      <Wrapper>\n        <h2>계정 정보</h2>\n\n        <LabelInput\n          label=\"이메일\"\n          disabled={!!isModifyMode}\n          defaultValue={isModifyMode ? user?.personal.email : ''}\n          errorMessage={errors?.email?.message?.toString()}\n          {...registerHookForm('email', {\n            pattern: { value: email, message: '이메일 형식이 아닙니다.' },\n            required: '필수 입력',\n          })}\n        />\n        <LabelInput\n          label=\"이름\"\n          defaultValue={isModifyMode ? user?.personal.name : ''}\n          errorMessage={errors?.name?.message?.toString()}\n          {...registerHookForm('name', { required: '필수 입력' })}\n        />\n        {!isModifyMode && (\n          <>\n            <LabelInput\n              label=\"비밀번호\"\n              type=\"password\"\n              errorMessage={errors?.password?.message?.toString()}\n              placeholder={passwordPlaceholder}\n              {...registerHookForm('password', {\n                required: '필수 입력',\n                pattern: { value: password, message: '8자리 이상, 문자, 특수문자 포함' },\n              })}\n            />\n            <LabelInput\n              label=\"비밀번호 확인\"\n              type=\"password\"\n              errorMessage={errors?.repassword?.message?.toString()}\n              placeholder={passwordPlaceholder}\n              {...registerHookForm('repassword', {\n                required: '필수 입력',\n                validate: {\n                  checkPassword: (v) => checkPassword(v) || '비밀번호가 일치하지 않습니다.',\n                },\n              })}\n            />\n          </>\n        )}\n        <h2>회사 정보</h2>\n        <Controller\n          name=\"businessType\"\n          defaultValue={'PERSONAL'}\n          control={control}\n          rules={{ required: '필수 입력' }}\n          render={({ field }) => (\n            <LabelSelect\n              label=\"계정유형\"\n              options={[\n                { label: '개인사업자', value: 'PERSONAL' },\n                { label: '법인사업자', value: 'CORPORATION' },\n              ]}\n              {...field}\n              errorMessage={errors.businessType?.message?.toString()}\n            />\n          )}\n        />\n        <LabelInput\n          label=\"회사명\"\n          defaultValue={isModifyMode ? user?.business.businessName : ''}\n          errorMessage={errors.businessName?.message?.toString()}\n          {...registerHookForm('businessName', { required: '필수 입력' })}\n        />\n        <LabelInput\n          label=\"대표자 명\"\n          defaultValue={isModifyMode ? user?.business.representative : ''}\n          errorMessage={errors.representative?.message?.toString()}\n          {...registerHookForm('representative', { required: '필수 입력' })}\n        />\n        <LabelInput\n          label=\"사업자등록번호\"\n          defaultValue={isModifyMode ? user?.business.registrationNumber : ''}\n          errorMessage={errors.registrationNumber?.message?.toString()}\n          {...registerHookForm('registrationNumber', { required: '필수 입력' })}\n        />\n        <LabelInput\n          label=\"사업자등록증\"\n          defaultValue={isModifyMode ? user?.business.licenceImageUrl : ''}\n          errorMessage={errors.licenceImageUrl?.message?.toString()}\n          {...registerHookForm('licenceImageUrl', { required: '필수 입력' })}\n        />\n        <h2>계좌 정보</h2>\n        <LabelInput\n          label=\"은행명\"\n          defaultValue={isModifyMode ? user?.account.bank : ''}\n          errorMessage={errors.bank?.message?.toString()}\n          {...registerHookForm('bank', { required: '필수 입력' })}\n        />\n        <LabelInput\n          label=\"계좌번호\"\n          defaultValue={isModifyMode ? user?.account.accountNumber : ''}\n          errorMessage={errors.accountNumber?.message?.toString()}\n          {...registerHookForm('accountNumber', { required: '필수 입력' })}\n        />\n        <LabelInput\n          label=\"예금주\"\n          defaultValue={isModifyMode ? user?.account.accountHolder : ''}\n          errorMessage={errors.accountHolder?.message?.toString()}\n          {...registerHookForm('accountHolder', { required: '필수 입력' })}\n        />\n        {isModifyMode && (\n          <FindPassword onClick={() => router.push('setting/account')}>\n            비밀번호 변경하기\n          </FindPassword>\n        )}\n      </Wrapper>\n\n      <ActionsBox>\n        <Button type=\"submit\" styleType=\"primary\" layoutMode=\"fullWidth\">\n          {buttonText}\n        </Button>\n        {!isModifyMode && <QuestionLink question={question} name={actionText} href={actionLink} />}\n      </ActionsBox>\n    </StyledForm>\n  );\n}\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  ${media.mobile} {\n    justify-content: center;\n    width: 460px;\n    align-self: center;\n  }\n`;\n\nconst Wrapper = styled.div`\n  padding: 16px;\n  display: flex;\n  flex: 1;\n  gap: 16px;\n  flex-direction: column;\n`;\n\nconst ActionsBox = styled.div`\n  padding: 16px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 24px;\n  ${media.mobile} {\n    margin-top: 24px;\n  }\n`;\n\nconst FindPassword = styled.span`\n  cursor: pointer;\n  color: ${colors.primary};\n`;\n\nexport default SignUpForm;\n","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/base/Footer.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/base/FooterTabItem.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/base/GlobalDialog.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/base/GlobalFooter.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/base/Header.tsx",["380"],[],"import { colors } from '@/lib/colors';\nimport { media } from '@/lib/media';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport Notification from '@/components/vectors/Notification.svg';\nimport SquarePlus from '@/components/vectors/SquarePlus.svg';\nimport MyInfo from '@/components/vectors/MyInfo.svg';\nimport Auction from '@/components/vectors/Auction.svg';\nimport { useAtom } from 'jotai';\nimport { userAtom } from '@/store';\n\nfunction Header() {\n  const [user] = useAtom(userAtom);\n  return (\n    <Block>\n      <Content>\n        <Addon></Addon>\n        <Addon>\n          {/* <SearchArea /> */}\n          <Buttons>\n            <Link href=\"/add\">\n              <IconWrapper>\n                <SquarePlus />\n                <span>경매 생성</span>\n              </IconWrapper>\n            </Link>\n            {!!user && (\n              <>\n                <Link href=\"/notification\">\n                  <IconWrapper>\n                    <Notification />\n                    <span>알림</span>\n                  </IconWrapper>\n                </Link>\n\n                <Link href=\"/hosting\">\n                  <IconWrapper>\n                    <Auction />\n                    <span>내경매</span>\n                  </IconWrapper>\n                </Link>\n              </>\n            )}\n            {/* <Link href=\"chart\">\n              <IconWrapper>\n                <Chart />\n                <span>시세</span>\n              </IconWrapper>\n            </Link> */}\n            {!user ? (\n              <></>\n            ) : (\n              <>\n                <Link href=\"/register\">\n                  <IconWrapper>\n                    <MyInfo />\n                    <span>내정보</span>\n                  </IconWrapper>\n                </Link>\n              </>\n            )}\n          </Buttons>\n        </Addon>\n      </Content>\n    </Block>\n  );\n}\n\nconst IconWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 30px;\n  height: 64px;\n  align-items: center;\n  justify-content: center;\n  margin: 0 10px;\n  padding: 0;\n  line-height: 14px;\n  cursor: pointer;\n  svg {\n    margin-bottom: 4px;\n    color: ${colors.gray9};\n  }\n  span {\n    display: flex;\n    justify-content: center;\n    width: 48px;\n    color: ${colors.gray9};\n    font-size: 12px;\n    margin: 0;\n  }\n  &:hover {\n    svg,\n    span {\n      color: ${colors.gray7};\n    }\n  }\n`;\n\nconst Block = styled.div`\n  background: ${colors.white};\n  position: relative;\n  height: 72px;\n  border-bottom: 0.5px solid ${colors.gray3};\n  padding: 0 16px;\n  display: none;\n  align-items: center;\n  ${media.mobile} {\n    display: flex;\n  }\n`;\n\n// const StyledLogo = styled(Logo)`\n//   height: 32px;\n//   width: auto;\n// `;\n\nconst Content = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Addon = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst HomeLink = styled(Link)`\n  display: block;\n  color: inherit;\n`;\n\nexport default Header;\n","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/base/HeaderBackButton.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/base/MobileHeader.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/base/SearchArea.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/base/TopHeader.tsx",["381"],[],"import { colors } from '@/lib/colors';\nimport { media } from '@/lib/media';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport { userAtom } from '@/store';\nimport { useAtom } from 'jotai';\nimport { useRouter } from 'next/router';\nimport { removeStorageItem } from '@/lib/local-storage';\nimport { useEffect } from 'react';\nimport { checkIsLoggedIn } from '@/lib/protectedRotue';\n\nfunction TopHeader() {\n  const router = useRouter();\n  const [user, setUser] = useAtom(userAtom);\n\n  const getUser = async () => {\n    const user = await checkIsLoggedIn();\n    setUser(user);\n  };\n\n  useEffect(() => {\n    if (!user) {\n      getUser();\n    }\n  }, []);\n\n  const removeToken = () => {\n    removeStorageItem('accessToken');\n    setUser(null);\n    router.replace('/');\n  };\n\n  return (\n    <Block>\n      <Content>\n        <Addon>\n          <Link href={'/'}>\n            <LogoTitle>EMETAL</LogoTitle>\n          </Link>\n        </Addon>\n        <Addon>\n          {/* <SearchArea /> */}\n          <Buttons>\n            {!user ? (\n              <AuthWrapper>\n                <Link href=\"/login\">\n                  <StyledLink>로그인</StyledLink>\n                </Link>\n                <Link href=\"/register\">\n                  <StyledLink>회원가입</StyledLink>\n                </Link>\n              </AuthWrapper>\n            ) : (\n              <UserInfoWrapper>\n                <span>{user?.personal?.name}님 환영합니다.</span>\n                <StyledLink onClick={removeToken}>로그아웃</StyledLink>\n              </UserInfoWrapper>\n            )}\n          </Buttons>\n        </Addon>\n      </Content>\n    </Block>\n  );\n}\n\nconst Block = styled.div`\n  background: ${colors.gray1};\n  position: relative;\n  height: 40px;\n  border-bottom: 0.5px solid ${colors.gray3};\n  padding: 0 16px;\n  display: none;\n  align-items: center;\n  ${media.mobile} {\n    display: flex;\n  }\n`;\n\n// const StyledLogo = styled(Logo)`\n//   height: 32px;\n//   width: auto;\n// `;\n\nconst Content = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Addon = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst AuthWrapper = styled.div`\n  display: flex;\n  gap: 16px;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst LogoTitle = styled.h1`\n  font-size: 18px;\n  font-weight: 600;\n  margin: 0;\n  cursor: pointer;\n`;\n\nconst StyledLink = styled.div`\n  color: ${colors.gray9};\n  font-weight: 700;\n  cursor: pointer;\n`;\n\nconst UserInfoWrapper = styled.div`\n  span {\n    font-weight: 700;\n    color: ${colors.gray9};\n  }\n  display: flex;\n  gap: 16px;\n`;\n\nexport default TopHeader;\n","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/base/UserMenu.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/charts/MainChart.js",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/AutoHeightPage.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/Button.tsx",["382"],[],"import { HTMLAttributes } from 'react';\nimport styled, { css } from 'styled-components';\nimport buttonTheme, { sizeStyles } from '@/lib/buttonTheme';\n\ninterface ButtonProps {\n  layoutMode?: 'inline' | 'fullWidth';\n  buttonTheme?: unknown; // Todo: 개선 필요\n  styleType?: string;\n  type?: 'button' | 'submit' | 'reset';\n  size?: 'medium' | 'small';\n}\n\ninterface Props extends HTMLAttributes<HTMLButtonElement>, ButtonProps {}\n\nfunction Button({\n  layoutMode = 'inline',\n  type,\n  size = 'medium',\n  styleType = 'primary',\n  ...rest\n}: Props) {\n  return (\n    <StyledButton\n      type={type}\n      buttonTheme={buttonTheme}\n      styleType={styleType}\n      size={size}\n      layoutMode={layoutMode}\n      {...rest}\n    />\n  );\n}\n\nconst StyledButton = styled.button<ButtonProps>`\n  border: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  letter-spacing: -0.3px;\n  transition: filter 0.25s ease-in-out;\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\n  ${({ buttonTheme, styleType }) => buttonTheme[styleType]};\n  ${({ size }) => sizeStyles[size!]};\n  ${(props) =>\n    props.layoutMode === 'fullWidth' &&\n    css`\n      width: 100%;\n      display: inline-block;\n    `}\n\n  @media (max-width: 640px) {\n    width: 100%;\n  }\n`;\n\nexport default Button;\n","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/Dialog.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/ErrorMessage.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/Field.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/FullHeightPage.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/Input.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/LabelDatePicker.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/LabelInput.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/LabelSelect.tsx",["383"],[],"import { colors } from '@/lib/colors';\nimport { Select } from 'antd';\nimport React, { forwardRef, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport ErrorMessage from './ErrorMessage';\n\nconst { Option } = Select;\n\ninterface Option {\n  label: string;\n  value: number | string;\n}\n\ninterface Props {\n  label: string;\n  errorMessage?: string;\n  options: Array<Option>;\n}\n\nconst LabelSelect = forwardRef(({ label, errorMessage, options, ...field }: Props, ref) => {\n  const [focused, setFocused] = useState(false);\n\n  const onFocus = () => {\n    setFocused(true);\n  };\n\n  const onBlur = () => {\n    setFocused(false);\n  };\n\n  return (\n    <Wrapper>\n      <Block>\n        <Label focused={focused}>{label}</Label>\n        <ErrorMessage errorMessage={errorMessage} />\n      </Block>\n      <StyledSelect size=\"large\" onFocus={onFocus} onBlur={onBlur} {...field}>\n        {options?.map((option) => {\n          return (\n            <Option key={option.label + option.value} value={option.value}>\n              {option.label}\n            </Option>\n          );\n        })}\n      </StyledSelect>\n    </Wrapper>\n  );\n});\n\nLabelSelect.displayName = 'LabelSelect';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Block = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nconst Label = styled.label<{ focused: boolean }>`\n  line-height: 1.5;\n  font-size: 16px;\n  letter-spacing: -0.3px;\n  ${(props) =>\n    props.focused &&\n    css`\n      color: ${colors.primary};\n    `}\n`;\n\nconst StyledSelect = styled(Select)`\n  display: 'inline-block';\n  min-height: 44px;\n  width: 100%;\n  border-color: ${colors.gray3};\n  border-radius: 4px;\n  box-shadow: none;\n  &:hover {\n    border-color: ${colors.gray3};\n  }\n  &.ant-select {\n    transition: none;\n    border-color: ${colors.primary};\n  }\n  &.ant-select-focused:not(.ant-select-disabled).ant-select:not(.ant-select-customize-input)\n    .ant-select-selector {\n    box-shadow: none;\n    border-color: ${colors.primary};\n  }\n  &.ant-select:not(.ant-select-customize-input) .ant-select-selector {\n    border-color: ${colors.gray3};\n  }\n  &.ant-select:not(.ant-select-disabled):hover {\n    border-color: ${colors.primary};\n    box-shadow: none;\n  }\n`;\n\nexport default LabelSelect;\n","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/LableTextArea.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/Modal.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/Overlay.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/ThumbnailUploadField.tsx",["384","385","386"],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/common/Wrapper.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/home/AuctionCard.tsx",["387","388","389","390","391","392","393","394","395"],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/home/AuctionCardList.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/setting/AccountSetting.tsx",["396"],[],"import { useMutation } from '@tanstack/react-query';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { colors } from '@/lib/colors';\nimport Button from '@/components/common/Button';\nimport Input from '@/components/common/Input';\nimport { changePassword, findPassword } from '@/lib/api/user';\nimport { media } from '@/lib/media';\nimport Swal from 'sweetalert2';\nimport { userAtom } from '@/store';\nimport { useAtom } from 'jotai';\nimport Router from 'next/router';\n\nfunction AccountSetting() {\n  const [user, setUser] = useAtom(userAtom);\n  const isModifyMode = !!user;\n\n  const [form, setForm] = useState({\n    value1: '',\n    value2: '',\n  });\n\n  const reset = () => {\n    setForm({\n      value1: '',\n      value2: '',\n    });\n  };\n\n  const { mutate: mutateChangePassword } = useMutation(changePassword, {\n    onSuccess: () => {\n      Swal.fire('비밀번호 변경', '비밀번호가 변경되었습니다.', 'success');\n      Router.replace('/');\n      reset();\n    },\n    onError: (e) => {\n      Swal.fire('실패!', e.response.data.message, 'error');\n    },\n  });\n\n  const { mutate: mutateFindPassword } = useMutation(findPassword, {\n    onSuccess: () => {\n      Swal.fire('비밀번호 찾기', '임시 비밀번호가 발송되었습니다.', 'success');\n      Router.replace('/');\n      reset();\n    },\n    onError: (e) => {\n      Swal.fire('실패!', e.response.data.message, 'error');\n    },\n  });\n\n  const onChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    const key = e.target.name;\n    const { value } = e.target;\n    setForm({ ...form, [key]: value });\n  };\n\n  const onSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    isModifyMode ? mutateChangePassword(form) : mutateFindPassword(form);\n  };\n\n  return (\n    <Block>\n      <div>\n        <Title>{isModifyMode ? '내 계정' : '비밀번호 찾기'}</Title>\n        {isModifyMode && (\n          <Section>\n            <h4>아이디</h4>\n            <Username>{user?.personal.email}</Username>\n          </Section>\n        )}\n        <Section>\n          <h4>{isModifyMode ? '비밀번호 변경' : '이름과 이메일을 입력하세요.'}</h4>\n          <form onSubmit={onSubmit}>\n            <InputGroup>\n              <Input\n                name=\"value1\"\n                placeholder={isModifyMode ? '현재 비밀번호' : '이름'}\n                type={isModifyMode ? 'password' : 'text'}\n                onChange={onChange}\n                value={form.value1}\n              />\n              <Input\n                name=\"value2\"\n                placeholder={isModifyMode ? '새 비밀번호' : '이메일'}\n                type={isModifyMode ? 'password' : 'email'}\n                onChange={onChange}\n                value={form.value2}\n              />\n            </InputGroup>\n            <Button styleType=\"secondary\" type=\"submit\">\n              {isModifyMode ? ' 비밀번호 변경' : '비밀번호 찾기'}\n            </Button>\n          </form>\n        </Section>\n      </div>\n      {/* <UnregisterWrapper>\n        <UnregisterButton onClick={askUnregister}>계정 탈퇴</UnregisterButton>\n      </UnregisterWrapper> */}\n    </Block>\n  );\n}\n\nconst Title = styled.h1`\n  margin-top: 0;\n  margin-bottom: 32px;\n  font-weight: 800;\n  color: ${colors.gray9};\n  font-size: 48px;\n  line-height: 1.5;\n`;\n\nconst Block = styled.div`\n  padding: 16px;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n\n  ${media.mobile} {\n    width: 100%;\n    max-width: 768px;\n    margin-left: auto;\n    margin-right: auto;\n    flex: initial;\n    margin-top: 96px;\n  }\n`;\n\nconst Section = styled.section`\n  h4 {\n    margin-top: 0;\n    margin-bottom: 8px;\n    font-size: 16px;\n    color: ${colors.gray5};\n  }\n\n  & + & {\n    margin-top: 32px;\n  }\n`;\nconst Username = styled.div`\n  font-size: 16px;\n  color: ${colors.gray7};\n`;\n\nconst InputGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-bottom: 8px;\n  ${media.mobile} {\n    width: 460px;\n  }\n`;\n\nexport default AccountSetting;\n","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/templates/BasicTemplate.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/templates/TabTemplate.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/components/vectors/ArrowLeft.tsx",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/api/auctions.ts",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/api/auth.ts",["397"],[],"import { defaultAxios } from '../defaultAxios';\n\ninterface AuthParam {\n  email: string;\n  password: string;\n}\n\ninterface Business {\n  businessType: string;\n  businessName: string;\n  representative: string;\n  registrationNumber: string;\n  licenceImageUrl: string;\n}\n\ninterface Personal {\n  name: string;\n  email: string;\n  password: string;\n}\n\ninterface Account {\n  bank: string;\n  accountNumber: string;\n  accountHolder: string;\n}\ninterface RegisterParam {\n  business: Business;\n  personal: Personal;\n  account: Account;\n  isEnabled: string;\n}\n\nexport interface AuthResult {\n  tokens: Tokens;\n}\n\nexport interface Tokens {\n  accessToken: string;\n  refreshToken: string;\n}\n\nexport interface User {\n  id: number;\n  username: string;\n}\nexport interface ModifyUserParam {\n  business: Business;\n  personalUpdateCommand: {\n    name: string;\n  };\n  accountUpdateCommand: Account;\n}\n\nexport async function register(params: RegisterParam) {\n  const res = await defaultAxios.post('/user', params);\n  const result = res.data;\n  // ssr에서 필요\n  // const cookieHeader = res.headers['set-cookie'];\n  // const headers = createCookieHeaders(cookieHeader);\n\n  return { result };\n}\n\nexport async function modifyUser(params: ModifyUserParam) {\n  const res = await defaultAxios.put(`/user/${params.id}`, params.data);\n  const result = res.data;\n\n  return { result };\n}\n\nexport async function login(params: AuthParam) {\n  const res = await defaultAxios.post('/user/token', params);\n  const result = res.data;\n  const status = res.status;\n\n  // const cookieHeader = res.headers['set-cookie'];\n  // const headers = createCookieHeaders(cookieHeader);\n\n  return { result, status };\n}\n\nexport async function getMyAccount() {\n  const res = await defaultAxios.get<AuthResult>('/me');\n  return res.data;\n}\n\nfunction createCookieHeaders(setCookieHeader: string[] | undefined) {\n  if (!setCookieHeader || setCookieHeader?.length === 0) {\n    throw new Error('No cookie header');\n  }\n  const headers = new Headers();\n  setCookieHeader.forEach((cookie) => {\n    headers.append('Set-Cookie', cookie);\n  });\n  return headers;\n}\n\nexport async function getProfile() {\n  const res = await defaultAxios.get('user/profile');\n  return res.data;\n}\n","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/api/notification.ts",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/api/price-index.ts",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/api/types.ts",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/api/user.ts",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/applyAuth.ts",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/buttonTheme.ts",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/colors.ts",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/constants.ts",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/cookie.js",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/defaultAxios.ts",["398","399","400"],[],"import axios from 'axios';\n\nexport const defaultAxios = axios.create();\nconst testToken = process.env.NEXT_PUBLIC_TEST_TOKEN;\nconst baseURL = process.env.NEXT_PUBLIC_BASE_URL;\nconst localBaseURL = process.env.NEXT_LOCAL_BASE_URL;\nconst serviceKey = process.env.NEXT_PUBLIC_SERVICE_KEY;\nconst NODE_ENV = process.env.NODE_ENV;\n\ndefaultAxios.defaults.baseURL = baseURL;\ndefaultAxios.defaults.withCredentials = true;\n// defaultAxios.defaults.headers.common['Authorization'] = testToken;\ndefaultAxios.defaults.headers.common['Service'] = serviceKey;\n\nexport function setDefaultAxiosAuth(token: string) {\n  const tokenPrefix = 'Bearer';\n  const space = ' ';\n  defaultAxios.defaults.headers.common['Authorization'] = tokenPrefix + space + token;\n}\n\nexport function clearDefaultAxiosCookie() {\n  delete defaultAxios.defaults.headers.common['Cookie'];\n}\n","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/local-storage.ts",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/media.ts",["401"],[],"import { css } from 'styled-components';\n\nconst breakpoints = {\n  mobile: 500,\n  tablet: 768,\n  desktop: 1024,\n  wide: 1200,\n  xwide: 1440,\n} as const;\n\ntype BreakpointName = keyof typeof breakpoints;\n\nexport const mediaQuery = (width: number) => `@media (min-width: ${width}px)`;\ntype Media = Record<BreakpointName, string>;\n\nexport const media = Object.entries(breakpoints).reduce((acc, [name, width]) => {\n  acc[name as BreakpointName] = mediaQuery(width);\n  return acc;\n}, {} as Media);\n","/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/protectedRotue.ts",[],[],"/Users/leo_kim/Lab/Apps/Trillions_eMetal_front/lib/utils/pattern.js",[],[],{"ruleId":"402","severity":1,"message":"403","line":8,"column":10,"nodeType":"404","messageId":"405","endLine":8,"endColumn":19},{"ruleId":"406","severity":1,"message":"407","line":65,"column":6,"nodeType":"408","endLine":65,"endColumn":8,"suggestions":"409"},{"ruleId":"410","severity":1,"message":"411","line":85,"column":18,"nodeType":"412","messageId":"413","endLine":85,"endColumn":21,"suggestions":"414"},{"ruleId":"410","severity":1,"message":"411","line":94,"column":18,"nodeType":"412","messageId":"413","endLine":94,"endColumn":21,"suggestions":"415"},{"ruleId":"402","severity":1,"message":"416","line":29,"column":10,"nodeType":"404","messageId":"405","endLine":29,"endColumn":25},{"ruleId":"406","severity":1,"message":"417","line":61,"column":6,"nodeType":"408","endLine":61,"endColumn":8,"suggestions":"418"},{"ruleId":"419","severity":1,"message":"420","line":8,"column":1,"nodeType":"421","endLine":31,"endColumn":2,"suppressions":"422"},{"ruleId":"402","severity":1,"message":"423","line":14,"column":10,"nodeType":"404","messageId":"405","endLine":14,"endColumn":19},{"ruleId":"402","severity":1,"message":"424","line":15,"column":10,"nodeType":"404","messageId":"405","endLine":15,"endColumn":23},{"ruleId":"406","severity":1,"message":"417","line":25,"column":6,"nodeType":"408","endLine":25,"endColumn":8,"suggestions":"425"},{"ruleId":"406","severity":1,"message":"426","line":21,"column":6,"nodeType":"408","endLine":21,"endColumn":8,"suggestions":"427"},{"ruleId":"406","severity":1,"message":"417","line":41,"column":6,"nodeType":"408","endLine":41,"endColumn":8,"suggestions":"428"},{"ruleId":"402","severity":1,"message":"429","line":15,"column":35,"nodeType":"404","messageId":"405","endLine":15,"endColumn":43},{"ruleId":"410","severity":1,"message":"411","line":44,"column":17,"nodeType":"412","messageId":"413","endLine":44,"endColumn":20,"suggestions":"430"},{"ruleId":"402","severity":1,"message":"431","line":24,"column":6,"nodeType":"404","messageId":"405","endLine":24,"endColumn":10},{"ruleId":"402","severity":1,"message":"432","line":31,"column":23,"nodeType":"404","messageId":"405","endLine":31,"endColumn":27},{"ruleId":"406","severity":1,"message":"433","line":42,"column":6,"nodeType":"408","endLine":42,"endColumn":8,"suggestions":"434"},{"ruleId":"410","severity":1,"message":"411","line":62,"column":18,"nodeType":"412","messageId":"413","endLine":62,"endColumn":21,"suggestions":"435"},{"ruleId":"410","severity":1,"message":"411","line":72,"column":18,"nodeType":"412","messageId":"413","endLine":72,"endColumn":21,"suggestions":"436"},{"ruleId":"402","severity":1,"message":"437","line":134,"column":9,"nodeType":"404","messageId":"405","endLine":134,"endColumn":19},{"ruleId":"402","severity":1,"message":"438","line":136,"column":7,"nodeType":"404","messageId":"405","endLine":136,"endColumn":15},{"ruleId":"406","severity":1,"message":"417","line":25,"column":6,"nodeType":"408","endLine":25,"endColumn":8,"suggestions":"439"},{"ruleId":"440","severity":1,"message":"441","line":43,"column":30,"nodeType":"442","messageId":"443","endLine":43,"endColumn":35},{"ruleId":"402","severity":1,"message":"444","line":20,"column":84,"nodeType":"404","messageId":"405","endLine":20,"endColumn":87},{"ruleId":"402","severity":1,"message":"445","line":26,"column":3,"nodeType":"404","messageId":"405","endLine":26,"endColumn":12},{"ruleId":"402","severity":1,"message":"446","line":72,"column":9,"nodeType":"404","messageId":"405","endLine":72,"endColumn":28},{"ruleId":"402","severity":1,"message":"447","line":143,"column":7,"nodeType":"404","messageId":"405","endLine":143,"endColumn":26},{"ruleId":"402","severity":1,"message":"431","line":4,"column":8,"nodeType":"404","messageId":"405","endLine":4,"endColumn":12},{"ruleId":"402","severity":1,"message":"448","line":26,"column":7,"nodeType":"404","messageId":"405","endLine":26,"endColumn":26},{"ruleId":"402","severity":1,"message":"449","line":67,"column":5,"nodeType":"404","messageId":"405","endLine":67,"endColumn":13},{"ruleId":"402","severity":1,"message":"450","line":68,"column":5,"nodeType":"404","messageId":"405","endLine":68,"endColumn":16},{"ruleId":"402","severity":1,"message":"451","line":73,"column":22,"nodeType":"404","messageId":"405","endLine":73,"endColumn":37},{"ruleId":"402","severity":1,"message":"452","line":89,"column":5,"nodeType":"404","messageId":"405","endLine":89,"endColumn":14},{"ruleId":"402","severity":1,"message":"453","line":90,"column":5,"nodeType":"404","messageId":"405","endLine":90,"endColumn":12},{"ruleId":"402","severity":1,"message":"454","line":91,"column":18,"nodeType":"404","messageId":"405","endLine":91,"endColumn":24},{"ruleId":"402","severity":1,"message":"455","line":191,"column":7,"nodeType":"404","messageId":"405","endLine":191,"endColumn":18},{"ruleId":"402","severity":1,"message":"456","line":15,"column":16,"nodeType":"404","messageId":"405","endLine":15,"endColumn":23},{"ruleId":"402","severity":1,"message":"457","line":88,"column":10,"nodeType":"404","messageId":"405","endLine":88,"endColumn":29},{"ruleId":"402","severity":1,"message":"458","line":4,"column":7,"nodeType":"404","messageId":"405","endLine":4,"endColumn":16},{"ruleId":"402","severity":1,"message":"459","line":6,"column":7,"nodeType":"404","messageId":"405","endLine":6,"endColumn":19},{"ruleId":"402","severity":1,"message":"460","line":8,"column":7,"nodeType":"404","messageId":"405","endLine":8,"endColumn":15},{"ruleId":"402","severity":1,"message":"461","line":1,"column":10,"nodeType":"404","messageId":"405","endLine":1,"endColumn":13},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'firstAuctionFormData.metal', 'getUser', 'openDialog', 'router', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["462"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["463","464"],["465","466"],"'auctionFormData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUser' and 'user'. Either include them or remove the dependency array.",["467"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["468"],"'useRouter' is defined but never used.","'useOpenDialog' is defined but never used.",["469"],"React Hook useEffect has a missing dependency: 'setFirstAuctionFormData'. Either include it or remove the dependency array.",["470"],["471"],"'_' is defined but never used.",["472","473"],"'User' is defined but never used.","'mode' is defined but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["474"],["475","476"],["477","478"],"'handleUser' is assigned a value but never used.","'HomeLink' is assigned a value but never used.",["479"],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","'ref' is defined but never used.","'deletable' is assigned a value but never used.","'onDeleteButtonClick' is assigned a value but never used.","'DeleteButtonWrapper' is assigned a value but never used.","'auctionTypeColorMap' is assigned a value but never used.","'hostUser' is assigned a value but never used.","'auctionType' is assigned a value but never used.","'metalOptionName' is assigned a value but never used.","'getValues' is assigned a value but never used.","'control' is assigned a value but never used.","'errors' is assigned a value but never used.","'UserWrapper' is assigned a value but never used.","'setUser' is assigned a value but never used.","'createCookieHeaders' is defined but never used.","'testToken' is assigned a value but never used.","'localBaseURL' is assigned a value but never used.","'NODE_ENV' is assigned a value but never used.","'css' is defined but never used.",{"desc":"480","fix":"481"},{"messageId":"482","fix":"483","desc":"484"},{"messageId":"485","fix":"486","desc":"487"},{"messageId":"482","fix":"488","desc":"484"},{"messageId":"485","fix":"489","desc":"487"},{"desc":"490","fix":"491"},{"kind":"492","justification":"493"},{"desc":"490","fix":"494"},{"desc":"495","fix":"496"},{"desc":"490","fix":"497"},{"messageId":"482","fix":"498","desc":"484"},{"messageId":"485","fix":"499","desc":"487"},{"desc":"500","fix":"501"},{"messageId":"482","fix":"502","desc":"484"},{"messageId":"485","fix":"503","desc":"487"},{"messageId":"482","fix":"504","desc":"484"},{"messageId":"485","fix":"505","desc":"487"},{"desc":"490","fix":"506"},"Update the dependencies array to be: [firstAuctionFormData.metal, getUser, openDialog, router, user]",{"range":"507","text":"508"},"suggestUnknown",{"range":"509","text":"510"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"509","text":"511"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"512","text":"510"},{"range":"512","text":"511"},"Update the dependencies array to be: [getUser, user]",{"range":"513","text":"514"},"directive","",{"range":"515","text":"514"},"Update the dependencies array to be: [setFirstAuctionFormData]",{"range":"516","text":"517"},{"range":"518","text":"514"},{"range":"519","text":"510"},{"range":"519","text":"511"},"Update the dependencies array to be: [getUser]",{"range":"520","text":"521"},{"range":"522","text":"510"},{"range":"522","text":"511"},{"range":"523","text":"510"},{"range":"523","text":"511"},{"range":"524","text":"514"},[2181,2183],"[firstAuctionFormData.metal, getUser, openDialog, router, user]",[2640,2643],"unknown","never",[2926,2929],[1677,1679],"[getUser, user]",[935,937],[858,860],"[setFirstAuctionFormData]",[1076,1078],[1323,1326],[1275,1277],"[getUser]",[1770,1773],[2040,2043],[668,670]]